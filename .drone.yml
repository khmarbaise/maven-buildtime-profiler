---
kind: pipeline
name: linux-pipeline
type: docker

image_pull_secrets:
  - dockerconfig

platform:
  os: linux
  arch: amd64

steps:
  - name: restore
    image: meltwater/drone-cache:v1.4.0
    pull: always
    volumes:
      - name: m2cache
        path: /drone/src/.repo
    settings:
      cache_key: "{{ .Repo.Owner }}_{{ .Repo.Name }}_{{ .Commit.Branch }}_{{ checksum \"pom.xml\" }}"
      access_key:
        from_secret: aws_access_key_id
      secret_key:
        from_secret: aws_secret_access_key
      bucket: maven-it-extension-build-cache
      region: eu-central-1
      restore: true
      filesystem-cache-root: /drone/src
      mount:
        - .repo

  - name: mavenjdk8
    pull: always
    image: docker.io/maven:3.8.6-openjdk-11-slim
    volumes:
      - name: m2cache
        path: /drone/src/.repo
    commands:
      - mvn -Dmaven.repo.local=/drone/src/.repo -Prun-its -V --no-transfer-progress clean verify --fail-at-end --batch-mode
  - name: rebuild
    image: meltwater/drone-cache:v1.4.0
    pull: always
    volumes:
      - name: m2cache
        path: /drone/src/.repo
    settings:
      cache_key: "{{ .Repo.Owner }}_{{ .Repo.Name }}_{{ .Commit.Branch }}_{{ checksum \"pom.xml\" }}"
      access_key:
        from_secret: aws_access_key_id
      secret_key:
        from_secret: aws_secret_access_key
      bucket: maven-it-extension-build-cache
      region: eu-central-1
      rebuild: true
      filesystem-cache-root: /drone/src
      mount:
        - .repo
      when:
        event: push
volumes:
  - name: m2cache
    temp: { }
